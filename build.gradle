group 'code.kliangh'

apply plugin: "java"
apply plugin: "jacoco"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

ext {
	//dependencies
	springBootVersion = '2.2.2.RELEASE'
}

dependencies {
	compileOnly "org.projectlombok:lombok:1.16.12"

	compile "org.springframework.boot:spring-boot-starter-data-jpa:$rootProject.ext.springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-data-redis:$rootProject.ext.springBootVersion"
	compile "org.springframework.boot:spring-boot-starter-web:$rootProject.ext.springBootVersion"
	compile "org.springframework.boot:spring-boot-starter-actuator:$rootProject.ext.springBootVersion"

    compile "redis.clients:jedis:3.2.0"
    compile "org.postgresql:postgresql:42.2.8"
    compile "com.googlecode.log4jdbc:log4jdbc:1.2"
    compile "org.slf4j:slf4j-api:1.7.29"

    compile "io.springfox:springfox-swagger2:2.8.0"
	compile "io.springfox:springfox-swagger-ui:2.8.0"

	compile "commons-beanutils:commons-beanutils:1.9.3"
	compile "com.fasterxml.jackson.core:jackson-databind:2.9.0"

	testCompile "org.springframework.boot:spring-boot-starter-test:$rootProject.ext.springBootVersion"
	testCompile "org.junit.jupiter:junit-jupiter-api:5.0.0"
	testRuntime "org.junit.jupiter:junit-jupiter-engine:5.0.0"
}

jacocoTestReport {
	reports {
		xml.enabled = true
		html.enabled = true
	}

	afterEvaluate {
		classDirectories = files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'**/*Application**',
                    '**/*SystemInfo**',
					'**/*Config**'
			])
		})
	}
}
test.finalizedBy(project.tasks.jacocoTestReport)
check.dependsOn jacocoTestReport